version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: glotelho-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/app.ini
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL:-http://localhost}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-glotelho}
      - DB_USERNAME=${DB_USERNAME:-glotelho}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
    depends_on:
      - mysql
    networks:
      - glotelho-network

  webserver:
    image: nginx:alpine
    container_name: glotelho-webserver
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - glotelho-network

  mysql:
    image: mysql:8.0
    container_name: glotelho-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-glotelho}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootsecret}
      MYSQL_USER: ${DB_USERNAME:-glotelho}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - glotelho-network

  redis:
    image: redis:alpine
    container_name: glotelho-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redisdata:/data
    networks:
      - glotelho-network

  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: glotelho-horizon
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
    depends_on:
      - redis
    command: php artisan horizon
    networks:
      - glotelho-network

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local

networks:
  glotelho-network:
    driver: bridge
